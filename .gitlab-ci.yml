default:
  image: registry.gitlab.com/tankerhq/ci/ci-native:latest
  before_script: &global_before_script
    - poetry install

stages:
  - build
  - bridge-check
  - check
  - deploy
  - bridge-deploy
  - mirror

##########
# Stages #
##########

.build:
  stage: build

.bridge-check:
  stage: bridge-check

.check:
  stage: check

.deploy:
  stage: deploy

.bridge-deploy:
  stage: bridge-deploy

.mirror:
  stage: mirror

########
# Tags #
########

.tags/windows:
  tags:
    - windows

.tags/linux:
  tags:
    - linux

.tags/macos:
  tags:
    - macos

#############################
# Default settings override #
#############################

.before-script/bump-files:
  before_script:
    - *global_before_script
    - poetry run python run-ci.py bump-files --version=$SDK_NATIVE_RELEASE_VERSION

##############
# Conditions #
##############

.if-valid-native-release-version: &if-valid-native-release-version
    if: $SDK_NATIVE_RELEASE_VERSION =~ /\A[0-9.]+(-[a-z]+[0-9]+)?\z/

.if-invalid-native-release-version: &if-invalid-native-release-version
    if: $SDK_NATIVE_RELEASE_VERSION !~ /\A[0-9.]+(-[a-z]+[0-9]+)?\z/

.if-valid-ios-release-version: &if-valid-ios-release-version
    if: $SDK_IOS_RELEASE_VERSION =~ /\A[0-9.]+(-[a-z]+[0-9]+)?\z/

.if-valid-android-release-version: &if-valid-android-release-version
    if: $SDK_ANDROID_RELEASE_VERSION =~ /\A[0-9.]+(-[a-z]+[0-9]+)?\z/

.if-valid-python-release-version: &if-valid-python-release-version
    if: $SDK_PYTHON_RELEASE_VERSION =~ /\A[0-9.]+([a-b][0-9]+)?\z/

.if-invalid-web-release: &if-invalid-web-release
    if: $CI_PIPELINE_SOURCE == "web" && $SDK_NATIVE_RELEASE_VERSION !~ /\A[0-9.]+(-[a-z]+[0-9]+)?\z/

.if-invalid-android-release: &if-invalid-android-release
    if: $CI_PIPELINE_SOURCE == "web" && ($SDK_ANDROID_RELEASE_VERSION != null && $SDK_ANDROID_RELEASE_VERSION !~ /\A[0-9.]+(-[a-z]+[0-9]+)?\z/)

.if-invalid-ios-release: &if-invalid-ios-release
    if: $CI_PIPELINE_SOURCE == "web" && ($SDK_IOS_RELEASE_VERSION != null && $SDK_IOS_RELEASE_VERSION !~ /\A[0-9.]+(-[a-z]+[0-9]+)?\z/)

.if-invalid-python-release: &if-invalid-python-release
    if: $CI_PIPELINE_SOURCE == "web" && ($SDK_PYTHON_RELEASE_VERSION != null && $SDK_PYTHON_RELEASE_VERSION !~ /\A[0-9.]+([a-b][0-9]+)?\z/)

.if-merge-result: &if-merge-result
    if: $CI_MERGE_REQUEST_ID == null && $CI_PIPELINE_SOURCE == "push" && ($CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME =~ /\Afeat\/.+\z/)

.if-web-pipeline: &if-web-pipeline
    if: $CI_PIPELINE_SOURCE == "web"

.if-not-web-pipeline: &if-not-web-pipeline
    if: $CI_PIPELINE_SOURCE != "web"

.if-mr-pipeline: &if-mr-pipeline
    if: $CI_PIPELINE_SOURCE == "merge_request_event"

.if-schedule-pipeline: &if-schedule-pipeline
    if: $CI_PIPELINE_SOURCE == "schedule"

.if-not-push-pipeline: &if-not-push-pipeline
    if: $CI_PIPELINE_SOURCE != "push"

.if-ref-master: &if-ref-master
    if: $CI_COMMIT_REF_NAME == "master"

.if-release-tag: &if-release-tag
    if: $CI_COMMIT_REF_NAME =~ /\Av[0-9.]+\z/

.if-release-branch: &if-release-branch
    if: $CI_COMMIT_REF_NAME =~ /\Arelease\/.*\z/

.if-feature-branch: &if-feature-branch
    if: $CI_COMMIT_REF_NAME =~ /\Afeat\/.+\z/

#########
# Rules #
#########

.rules/mr/auto:
  rules:
    - <<: *if-mr-pipeline

.rules/mr/manual:
  rules:
    - <<: *if-mr-pipeline
      when: manual
      allow_failure: true

.rules/web/auto:
  rules:
    - <<: *if-web-pipeline

.rules/deploy:
  rules:
    - <<: *if-web-pipeline
      when: manual

.rules/nightly:
  rules:
    - <<: *if-schedule-pipeline

.rules/bridge-ci:
  rules:
    - <<: *if-mr-pipeline

.rules/bridge-release/ios:
  rules:
    - <<: *if-not-web-pipeline
      when: never
    - <<: *if-valid-ios-release-version

.rules/bridge-release/android:
  rules:
    - <<: *if-not-web-pipeline
      when: never
    - <<: *if-valid-android-release-version

.rules/bridge-release/python:
  rules:
    - <<: *if-not-web-pipeline
      when: never
    - <<: *if-valid-python-release-version

.rules/mirror:
  rules:
    - <<: *if-not-push-pipeline
      when: never
    - <<: *if-ref-master
    - <<: *if-release-tag
    - <<: *if-release-branch
    - <<: *if-feature-branch

#################
# Extend blocks #
#################

.build-artifacts:
  artifacts:
      paths:
        - package/

#############
# Variables #
#############

.variables/bridge-common:
  variables:
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID
    UPSTREAM_PIPELINE_ID: $CI_PIPELINE_ID
    UPSTREAM_BRANCH_NAME: $CI_COMMIT_REF_NAME

##################
# Workflow rules #
##################

workflow:
  rules:
    # web pipelines for releases only
    - <<: *if-invalid-web-release
      when: never
    - <<: *if-invalid-android-release
      when: never
    - <<: *if-invalid-ios-release
      when: never
    - <<: *if-invalid-python-release
      when: never
    # allow everything else
    - when: always

###############
# build stage #
###############

build/linux:
  extends:
    - .build
    - .tags/linux
    - .rules/mr/auto
    - .build-artifacts
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile gcc8-release

build/linux/release:
  extends:
    - .build
    - .tags/linux
    - .rules/web/auto
    - .before-script/bump-files
    - .build-artifacts
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile gcc8-release

build/windows:
  extends:
    - .build
    - .tags/windows
    - .rules/mr/auto
    - .build-artifacts
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile vs2019-release

build/windows/release:
  extends:
    - .build
    - .tags/windows
    - .rules/web/auto
    - .before-script/bump-files
    - .build-artifacts
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile vs2019-release

build/macos:
  extends:
    - .build
    - .tags/macos
    - .rules/mr/auto
    - .build-artifacts
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile macos-release

.build/macos/shared:
  extends:
    - .build
    - .tags/macos
    - .rules/mr/manual
    - .build-artifacts
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile macos-release-shared

build/macos/release:
  extends:
    - .build
    - .tags/macos
    - .rules/web/auto
    - .before-script/bump-files
    - .build-artifacts
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile macos-release

.build/macos/shared/release:
  extends:
    - .build
    - .tags/macos
    - .rules/web/auto
    - .before-script/bump-files
    - .build-artifacts
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile macos-release-shared
      
build/android:
  extends:
    - .build
    - .tags/linux
    - .rules/mr/manual
    - .build-artifacts
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile android-armv7-release --profile android-armv8-release --profile android-x86-release --profile android-x86_64-release --profile gcc8-release-shared

build/android/release:
  extends:
    - .build
    - .tags/linux
    - .rules/web/auto
    - .before-script/bump-files
    - .build-artifacts
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile android-armv7-release --profile android-armv8-release --profile android-x86-release --profile android-x86_64-release --profile gcc8-release-shared

build/ios:
  extends:
    - .build
    - .tags/macos
    - .rules/mr/manual
    - .build-artifacts
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile ios-x86-release --profile ios-x86_64-release

build/ios/release:
  extends:
    - .build
    - .tags/macos
    - .rules/web/auto
    - .before-script/bump-files
    - .build-artifacts
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile ios-x86-release --profile ios-x86_64-release --profile ios-armv7-release --profile ios-armv7s-release --profile ios-armv8-release

nightly/coverage:
  extends:
    - .build
    - .tags/linux
    - .rules/nightly
  script:
    # Using gcc8-release profile, but CI script will force debug for Tanker only
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile gcc8-release --coverage
    - mv build/gcc8-release/coverage coverage
  artifacts:
    paths:
      - coverage/
    expire_in: 7 days

######################
# bridge-check stage #
######################

bridge/ios:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/ios
  variables:
    UPSTREAM_RUNNER_TAG: macos
    UPSTREAM_JOB_NAME: build/ios
  trigger:
    project: TankerHQ/sdk-ios
    # FIXME
    branch: theo/fix_pipeline_release
    strategy: depend

bridge/ios/release:
  extends:
    - .bridge-check
    - .rules/bridge-release/ios
    - .variables/bridge-common
  needs:
    - build/ios/release
  variables:
    UPSTREAM_RUNNER_TAG: macos
    UPSTREAM_JOB_NAME: build/ios/release
    SDK_IOS_RELEASE_VERSION: $SDK_IOS_RELEASE_VERSION
  trigger:
    project: TankerHQ/sdk-ios
    # FIXME
    branch: theo/fix_pipeline_release
    strategy: depend

bridge/android:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/android
  variables:
    UPSTREAM_RUNNER_TAG: linux
    UPSTREAM_JOB_NAME: build/android
  trigger:
    project: TankerHQ/sdk-android
    # FIXME
    branch: theo/new_release_process
    strategy: depend

bridge/android/release:
  extends:
    - .bridge-check
    - .rules/bridge-release/android
    - .variables/bridge-common
  needs:
    - build/android/release
  variables:
    UPSTREAM_RUNNER_TAG: linux
    UPSTREAM_JOB_NAME: build/android/release
    SDK_ANDROID_RELEASE_VERSION: $SDK_ANDROID_RELEASE_VERSION
  trigger:
    project: TankerHQ/sdk-android
    # FIXME
    branch: theo/new_release_process
    strategy: depend

bridge/python/linux:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/linux
  variables:
    UPSTREAM_RUNNER_TAG: linux
    UPSTREAM_JOB_NAME: build/linux
  trigger:
    project: TankerHQ/sdk-python
    # FIXME
    branch: theo/new_release_process
    strategy: depend

bridge/python/macos:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/macos
  variables:
    UPSTREAM_RUNNER_TAG: macos
    UPSTREAM_JOB_NAME: build/macos
  trigger:
    project: TankerHQ/sdk-python
    # FIXME
    branch: theo/new_release_process
    strategy: depend

bridge/python/windows:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/windows
  variables:
    UPSTREAM_RUNNER_TAG: windows
    UPSTREAM_JOB_NAME: build/windows
  trigger:
    project: TankerHQ/sdk-python
    # FIXME
    branch: theo/new_release_process
    strategy: depend

bridge/python/release/linux:
  extends:
    - .bridge-check
    - .rules/bridge-release/python
    - .variables/bridge-common
  needs:
    - build/linux/release
  variables:
    UPSTREAM_RUNNER_TAG: linux
    UPSTREAM_JOB_NAME: build/linux/release
    SDK_PYTHON_RELEASE_VERSION: $SDK_PYTHON_RELEASE_VERSION
  trigger:
    project: TankerHQ/sdk-python
    # FIXME
    branch: theo/new_release_process
    strategy: depend

bridge/python/release/macos:
  extends:
    - .bridge-check
    - .rules/bridge-release/python
    - .variables/bridge-common
  needs:
    - build/macos/release
  variables:
    UPSTREAM_RUNNER_TAG: macos
    UPSTREAM_JOB_NAME: build/macos/release
    SDK_PYTHON_RELEASE_VERSION: $SDK_PYTHON_RELEASE_VERSION
  trigger:
    project: TankerHQ/sdk-python
    # FIXME
    branch: theo/new_release_process
    strategy: depend

bridge/python/release/windows:
  extends:
    - .bridge-check
    - .rules/bridge-release/python
    - .variables/bridge-common
  needs:
    - build/windows/release
  variables:
    UPSTREAM_RUNNER_TAG: windows
    UPSTREAM_JOB_NAME: build/windows/release
    SDK_PYTHON_RELEASE_VERSION: $SDK_PYTHON_RELEASE_VERSION
  trigger:
    project: TankerHQ/sdk-python
    # FIXME
    branch: theo/new_release_process
    strategy: depend

###############
# check stage #
###############

check/compat:
  extends:
    - .check
    - .tags/linux
    - .rules/mr/auto
  needs:
    - build/linux
  script:
    - poetry run python compat/run-compat.py --isolate-conan-user-home --profile gcc8-release

check/e2e:
  extends:
    - .check
    - .tags/linux
    - .rules/mr/auto
  image: registry.gitlab.com/tankerhq/ci/ci-main:latest
  needs:
    - build/linux
  script:
    - poetry run python end2end.py --isolate-conan-user-home --profile gcc8-release

check/compat/release:
  extends:
    - .check
    - .tags/linux
    - .rules/web/auto
    - .before-script/bump-files
  needs:
    - build/linux/release
  script:
    - poetry run python compat/run-compat.py --isolate-conan-user-home --profile gcc8-release

check/e2e/release:
  image: registry.gitlab.com/tankerhq/ci/ci-main:latest
  extends:
    - .check
    - .tags/linux
    - .rules/web/auto
    - .before-script/bump-files
  needs:
    - build/linux/release
  script:
    - poetry run python end2end.py --isolate-conan-user-home --profile gcc8-release

################
# deploy stage #
################

deploy:
  extends:
    - .deploy
    - .tags/linux
    - .rules/deploy
  release:
    description: sdk-native v$SDK_NATIVE_RELEASE_VERSION
    tag_name: v$SDK_NATIVE_RELEASE_VERSION
  script:
    - poetry run python run-ci.py --isolate-conan-user-home deploy

pages:
  extends:
    - .deploy
    - .tags/linux
    - .rules/nightly
  needs:
    - nightly/coverage
  script:
    - mv coverage/ public/
  artifacts:
    paths:
      - public
    expire_in: 7 days

#######################
# bridge-deploy stage #
#######################

bridge/ios/deploy:
  extends:
    - .bridge-deploy
    - .rules/bridge-release/ios
    - .variables/bridge-common
  needs:
    - bridge/ios/release
    - deploy
  variables:
    UPSTREAM_RUNNER_TAG: macos
    UPSTREAM_JOB_NAME: build/ios/release
    UPSTREAM_BRIDGE_STAGE: deploy
    SDK_IOS_RELEASE_VERSION: $SDK_IOS_RELEASE_VERSION
    SDK_NATIVE_LATEST_CONAN_REFERENCE: tanker/$SDK_NATIVE_RELEASE_VERSION@
  trigger:
    project: TankerHQ/sdk-ios
    # FIXME
    branch: theo/fix_pipeline_release
    strategy: depend

bridge/android/deploy:
  extends:
    - .bridge-deploy
    - .rules/bridge-release/android
    - .variables/bridge-common
  needs:
    - bridge/android/release
    - deploy
  variables:
    UPSTREAM_RUNNER_TAG: linux
    UPSTREAM_JOB_NAME: build/android/release
    UPSTREAM_BRIDGE_STAGE: deploy
    SDK_ANDROID_RELEASE_VERSION: $SDK_ANDROID_RELEASE_VERSION
    SDK_NATIVE_LATEST_CONAN_REFERENCE: tanker/$SDK_NATIVE_RELEASE_VERSION@
  trigger:
    project: TankerHQ/sdk-android
    # FIXME
    branch: theo/new_release_process
    strategy: depend

bridge/python/deploy:
  extends:
    - .bridge-deploy
    - .rules/bridge-release/python
    - .variables/bridge-common
  needs:
    - deploy
  variables:
    UPSTREAM_BRIDGE_STAGE: deploy
    SDK_PYTHON_RELEASE_VERSION: $SDK_PYTHON_RELEASE_VERSION
    SDK_NATIVE_LATEST_CONAN_REFERENCE: tanker/$SDK_NATIVE_RELEASE_VERSION@
  trigger:
    project: TankerHQ/sdk-python
    # FIXME
    branch: theo/new_release_process
    strategy: depend

################
# mirror stage #
################

mirror:
  extends:
    - .mirror
    - .tags/linux
    - .rules/mirror
  dependencies: []
  script:
    - poetry run python run-ci.py mirror
