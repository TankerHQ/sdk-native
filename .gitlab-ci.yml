include:
  project: TankerHQ/gitlab-ci-files
  file: /native.yml
  ref: 874483a45e99037b888688c0c3d0fb6a186da6b0

.after-script/branch_name:
  after_script:
    - echo $CI_COMMIT_REF_NAME > branch_name.txt

###############
# build stage #
###############

build/linux:
  extends:
    - .build
    - .tags/linux
    - .rules/mr/auto/nightly
    - .build-artifacts
    - .before-script/bump-files-on-release/bash
    - .after-script/branch_name
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile linux-release

build/linux/shared:
  extends:
    - .build
    - .tags/linux
    - .rules/mr/manual/web/auto/nightly
    - .before-script/bump-files-on-release/bash
    - .after-script/branch_name
    - .build-artifacts
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile linux-release-shared

build/windows:
  extends:
    - .build
    - .tags/windows
    - .rules/mr/auto/nightly
    - .build-artifacts
    - .before-script/bump-files-on-release/powershell
    - .after-script/branch_name
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile vs2019-release

build/macos:
  extends:
    - .build
    - .tags/macos
    - .rules/mr/auto/nightly
    - .build-artifacts
    - .before-script/bump-files-on-release/bash
    - .after-script/branch_name
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile macos-release

build/macos/shared:
  extends:
    - .build
    - .tags/macos
    - .rules/mr/manual/web/auto/nightly
    - .build-artifacts
    - .before-script/bump-files-on-release/bash
    - .after-script/branch_name
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile macos-release-shared

build/android/shared:
  extends:
    - .build
    - .tags/linux
    - .rules/mr/manual/web/auto/nightly
    - .build-artifacts
    - .before-script/bump-files-on-release/bash
    - .after-script/branch_name
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile android-armv7-release --profile android-armv8-release --profile android-x86-release --profile android-x86_64-release --profile linux-release-shared

build/android/static:
  extends:
    - .build
    - .tags/linux
    - .rules/mr/manual/web/auto/nightly
    - .build-artifacts
    - .before-script/bump-files-on-release/bash
    - .after-script/branch_name
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile android-armv7-release-static --profile android-armv8-release-static --profile android-x86-release-static --profile android-x86_64-release-static

build/ios:
  extends:
    - .build
    - .tags/macos
    - .rules/mr/manual/web/auto/nightly
    - .build-artifacts
    - .before-script/bump-files-on-release/bash
    - .after-script/branch_name
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile ios-x86-release --profile ios-x86_64-release --profile ios-armv7-release --profile ios-armv7s-release --profile ios-armv8-release

nightly/benchmark:
  extends:
    - .build
    - .tags/linux
    - .rules/nightly
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-benchmark --profile linux-release-shared

nightly/coverage:
  extends:
    - .build
    - .tags/linux
    - .rules/nightly
  script:
    # Using linux-release profile, but CI script will force debug for Tanker only
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile linux-release --coverage
    - mv build/linux-release/coverage coverage
  artifacts:
    paths:
      - coverage/
    expire_in: 7 days

######################
# bridge-check stage #
######################

bridge/ios:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/ios
  variables:
    UPSTREAM_JOB_NAME: build/ios
  trigger:
    project: TankerHQ/sdk-ios
    strategy: depend

bridge/android:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/android/shared
  variables:
    UPSTREAM_JOB_NAME: build/android/shared
  trigger:
    project: TankerHQ/sdk-android
    strategy: depend

bridge/rust/linux:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/linux
  variables:
    UPSTREAM_JOB_TARGET: linux
    UPSTREAM_JOB_NAME: build/linux
  trigger:
    project: TankerHQ/sdk-rust
    strategy: depend

bridge/rust/ios:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/ios
  variables:
    UPSTREAM_JOB_TARGET: ios
    UPSTREAM_JOB_NAME: build/ios
  trigger:
    project: TankerHQ/sdk-rust
    strategy: depend

bridge/rust/macos:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/macos
  variables:
    UPSTREAM_JOB_TARGET: macos
    UPSTREAM_JOB_NAME: build/macos
  trigger:
    project: TankerHQ/sdk-rust
    strategy: depend

bridge/rust/android:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/android/static
  variables:
    UPSTREAM_JOB_TARGET: android
    UPSTREAM_JOB_NAME: build/android/static
  trigger:
    project: TankerHQ/sdk-rust
    strategy: depend

bridge/python/linux:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/linux
  variables:
    UPSTREAM_JOB_TARGET: linux
    UPSTREAM_JOB_NAME: build/linux
  trigger:
    project: TankerHQ/sdk-python
    strategy: depend

bridge/python/macos:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/macos
  variables:
    UPSTREAM_JOB_TARGET: macos
    UPSTREAM_JOB_NAME: build/macos
  trigger:
    project: TankerHQ/sdk-python
    strategy: depend

bridge/python/windows:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/windows
  variables:
    UPSTREAM_JOB_TARGET: windows
    UPSTREAM_JOB_NAME: build/windows
  trigger:
    project: TankerHQ/sdk-python
    strategy: depend

bridge/ruby/linux:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/linux/shared
  variables:
    UPSTREAM_JOB_TARGET: linux
    UPSTREAM_JOB_NAME: build/linux/shared
  trigger:
    project: TankerHQ/sdk-ruby
    strategy: depend

bridge/ruby/macos:
  extends:
    - .bridge-check
    - .rules/bridge-ci
    - .variables/bridge-common
  needs:
    - build/macos/shared
  variables:
    UPSTREAM_JOB_TARGET: macos
    UPSTREAM_JOB_NAME: build/macos/shared
  trigger:
    project: TankerHQ/sdk-ruby
    strategy: depend

###############
# check stage #
###############

check/compat:
  extends:
    - .check
    - .tags/linux
    - .rules/mr/auto/nightly
    - .before-script/bump-files-on-release/bash
  needs:
    - build/linux
  script:
    - poetry run python compat/run-compat.py --profile linux-release

check/e2e:
  extends:
    - .check
    - .tags/linux
    - .rules/mr/auto/nightly
    - .before-script/bump-files-on-release/bash
  image: registry.gitlab.com/tankerhq/docker/e2e:latest
  needs:
    - build/linux
  script:
    - poetry run python end2end.py --isolate-conan-user-home --use-tanker=upstream --profile linux-release

################
# deploy stage #
################

deploy:
  extends:
    - .deploy
    - .tags/linux
    - .rules/deploy/native
  release:
    description: sdk-native v$SDK_NATIVE_RELEASE_VERSION
    tag_name: v$SDK_NATIVE_RELEASE_VERSION
  script:
    - poetry run python run-ci.py --isolate-conan-user-home deploy

pages:
  extends:
    - .deploy
    - .tags/linux
    - .rules/nightly
  needs:
    - nightly/coverage
  script:
    - mv coverage/ public/
  artifacts:
    paths:
      - public
    expire_in: 7 days

#######################
# bridge-deploy stage #
#######################

bridge/ios/deploy:
  extends:
    - .bridge-deploy
    - .rules/bridge-release/ios
    - .variables/bridge-common
  needs:
    - bridge/ios
    - deploy
  variables:
    UPSTREAM_BRIDGE_STAGE: deploy
    SDK_IOS_RELEASE_VERSION: $SDK_IOS_RELEASE_VERSION
    SDK_NATIVE_LATEST_CONAN_REFERENCE: tanker/$SDK_NATIVE_RELEASE_VERSION@
  trigger:
    project: TankerHQ/sdk-ios
    strategy: depend

bridge/android/deploy:
  extends:
    - .bridge-deploy
    - .rules/bridge-release/android
    - .variables/bridge-common
  needs:
    - bridge/android
    - deploy
  variables:
    UPSTREAM_BRIDGE_STAGE: deploy
    SDK_ANDROID_RELEASE_VERSION: $SDK_ANDROID_RELEASE_VERSION
    SDK_NATIVE_LATEST_CONAN_REFERENCE: tanker/$SDK_NATIVE_RELEASE_VERSION@
  trigger:
    project: TankerHQ/sdk-android
    strategy: depend

bridge/python/deploy:
  extends:
    - .bridge-deploy
    - .rules/bridge-release/python
    - .variables/bridge-common
  needs:
    - deploy
    - bridge/python/windows
    - bridge/python/macos
    - bridge/python/linux
  variables:
    UPSTREAM_BRIDGE_STAGE: deploy
    SDK_PYTHON_RELEASE_VERSION: $SDK_PYTHON_RELEASE_VERSION
    SDK_NATIVE_LATEST_CONAN_REFERENCE: tanker/$SDK_NATIVE_RELEASE_VERSION@
  trigger:
    project: TankerHQ/sdk-python
    strategy: depend

bridge/ruby/deploy:
  extends:
    - .bridge-deploy
    - .rules/bridge-release/ruby
    - .variables/bridge-common
  needs:
    - deploy
    - bridge/ruby/macos
    - bridge/ruby/linux
  variables:
    UPSTREAM_BRIDGE_STAGE: deploy
    SDK_RUBY_RELEASE_VERSION: $SDK_RUBY_RELEASE_VERSION
    SDK_NATIVE_LATEST_CONAN_REFERENCE: tanker/$SDK_NATIVE_RELEASE_VERSION@
  trigger:
    project: TankerHQ/sdk-ruby
    strategy: depend

bridge/rust/deploy:
  extends:
    - .bridge-deploy
    - .rules/bridge-release/rust
    - .variables/bridge-common
  needs:
    - deploy
    - bridge/rust/ios
    - bridge/rust/android
    - bridge/rust/macos
    - bridge/rust/linux
  variables:
    UPSTREAM_BRIDGE_STAGE: deploy
    SDK_RUST_RELEASE_VERSION: $SDK_RUST_RELEASE_VERSION
    SDK_NATIVE_LATEST_CONAN_REFERENCE: tanker/$SDK_NATIVE_RELEASE_VERSION@
  trigger:
    project: TankerHQ/sdk-rust
    strategy: depend

#############################
# react-native-deploy stage #
#############################

bridge/react-native/deploy:
  extends:
    - .react-native-deploy
    - .rules/bridge-release/react-native
    - .variables/bridge-common
  needs:
    - bridge/android/deploy
    - bridge/ios/deploy
  variables:
    UPSTREAM_BRIDGE_STAGE: deploy
    SDK_ANDROID_RELEASE_VERSION: $SDK_ANDROID_RELEASE_VERSION
    SDK_IOS_RELEASE_VERSION: $SDK_IOS_RELEASE_VERSION
    SDK_REACT_NATIVE_RELEASE_VERSION: $SDK_REACT_NATIVE_RELEASE_VERSION
  trigger:
    project: TankerHQ/sdk-react-native
    strategy: depend

################
# mirror stage #
################

mirror:
  extends:
    - .mirror
    - .tags/linux
    - .rules/mirror
  dependencies: []
  script:
    - poetry run python run-ci.py mirror
